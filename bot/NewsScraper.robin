# ***********************************************************
#                           Constants
# ***********************************************************
set URL to "https://news.google.com/search?q=stock%3A(INSERT_PARAM)&hl=en-US&gl=US&ceid=US%3Aen"
set TICKERS to ['F', 'SWN', 'RIG', 'HLX']
set REPLACE_CODE to "(INSERT_PARAM)"

# ***********************************************************
#                           Variables
# ***********************************************************
# URL that will hold the Ticker Symbol.
set sendURL to ''
# Browser Tab Instance for a certain Ticker Symbol.
set tickerInstance to false



# ***********************************************************
#                           MAIN CODE
# ***********************************************************

# Launching First Browser Instance.
WebAutomation.LaunchChrome \
    Url: "https://news.google.com/search?q=stock%3AF&hl=en-US&gl=US&ceid=US%3Aen" \
    WindowState:WebAutomation.BrowserWindowState.Normal \
    ClearCache:True \
    ClearCookies:True \
    BrowserInstance=> chromeInstance

loop foreach t in TICKERS
    # Creates the URL with the Ticker Symbol in the search field for easier searching.
    call insertTickerToURL ticker: t url: URL find: REPLACE_CODE tickerURL=> sendURL
    # Adds a new tab to the main browser instance that will call the web page with the current ticker.
    call addNewTab  webInstance: chromeInstance url: sendURL newInstance=> tickerInstance
end



# ***********************************************************
#                           FUNCTIONS
# ***********************************************************

# Adds a new browser tab with the ticker search url.
#
# {@param webInstance} Main Browser Instance.
# {@param url} URL string that we want to load for the new tab.
# {@return} A Browser Instance for that Ticker's Tab.
function addNewTab webInstance, url, output newInstance
    WebAutomation.CreateNewTab \
        BrowserInstance: webInstance \
        Url: url \
        NewBrowserInstance=> newInstance
end

# Replace a URL string with the Ticker Symbol into the URL. 
# URL has a section that has a set pattern to parse.
#
# {@param ticker} A string that represents the Ticker Symbol.
# {@param url} A string that represents the URL that is being replaced.
# {@param find} The string we are looking to replace in {@param url}. 
# {@return} A string with the new URL.
function insertTickerToURL ticker, url, find, output tickerURL
    Text.Replace \
        Text: url \
        TextToFind: find \
        ReplaceWith: ticker \  
        IsRegEx:False \
        IgnoreCase:False \
        ActivateEscapeSequences:False \
        Result=> tickerURL
end